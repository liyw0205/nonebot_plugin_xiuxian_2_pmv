from nonebot import on_command
from .. import NICKNAME
from nonebot.adapters.onebot.v11 import (
    Bot,
    GROUP,
    GroupMessageEvent,
    PrivateMessageEvent,
    MessageSegment
)
from ..xiuxian_utils.utils import handle_send, check_user, number_to
from ..xiuxian_utils.xiuxian2_handle import XiuxianDateManage
import random
import time
from datetime import datetime
import json
import os
from pathlib import Path
sql_message = XiuxianDateManage()

# 创建数据存储目录
DATA_PATH = Path(__file__).parent / "morning_night_data"
os.makedirs(DATA_PATH, exist_ok=True)

# 加载或初始化计数数据
def load_count_data():
    count_file = DATA_PATH / "count_data.json"
    if count_file.exists():
        with open(count_file, 'r', encoding='utf-8') as f:
            return json.load(f)
    else:
        return {
            "morning_count": 0,
            "night_count": 0,
            "morning_users": {},  # 存储用户ID和日期
            "night_users": {}     # 存储用户ID和日期
        }

def save_count_data(data):
    count_file = DATA_PATH / "count_data.json"
    with open(count_file, 'w', encoding='utf-8') as f:
        json.dump(data, f, ensure_ascii=False, indent=4)

async def reset_data_by_time():
    """根据当前时间重置早安或晚安数据"""
    now = datetime.now()
    hour = now.hour
    
    data = load_count_data()
    
    # 午夜0点重置早安数据
    if hour == 0:
        data["morning_count"] = 0
        data["morning_users"] = {}
        save_count_data(data)
        return "morning"
    # 中午12点重置晚安数据
    elif hour == 12:
        data["night_count"] = 0
        data["night_users"] = {}
        save_count_data(data)
        return "night"
    else:
        return None

def has_user_triggered(user_id, is_morning=True):
    """检查用户是否已经触发过"""
    data = load_count_data()
    current_date = datetime.now().strftime("%Y-%m-%d")
    
    if is_morning:
        user_data = data.get("morning_users", {})
    else:
        user_data = data.get("night_users", {})
    
    # 检查用户是否在今天已经触发过
    user_date = user_data.get(str(user_id))
    return user_date == current_date

def mark_user_triggered(user_id, is_morning=True):
    """标记用户已触发"""
    data = load_count_data()
    current_date = datetime.now().strftime("%Y-%m-%d")
    
    if is_morning:
        data["morning_users"][str(user_id)] = current_date
        data["morning_count"] += 1
    else:
        data["night_users"][str(user_id)] = current_date
        data["night_count"] += 1
    
    save_count_data(data)

def get_current_count(is_morning=True):
    """获取当前计数"""
    data = load_count_data()
    return data["morning_count"] if is_morning else data["night_count"]

# 运势类型和对应的星数
FORTUNE_TYPES = {
    "大凶": 1,
    "凶": 2,
    "小凶": 3,
    "小吉": 4,
    "吉": 5,
    "大吉": 6
}

# 运势描述库
FORTUNE_DESCRIPTIONS = {
    "大凶": [
        "今日诸事不宜，宜闭关修炼，静待时机",
        "运势低迷，恐有劫难，谨慎行事",
        "乌云遮日，需防小人暗算，守成为上",
        "道心不稳，易生心魔，宜静心养性",
        "天降灾厄，宜诵经祈福，化解凶煞",
        "黑云压顶，魔气缠身，今日不宜外出历练",
        "心魔作祟，易走火入魔，切记固守本心",
        "劫数将至，宜寻道友护法，共渡难关",
        "灵气紊乱，修炼难有寸进，不如休养生息",
        "煞星临门，诸事不顺，静待转机方为上策"
    ],
    "凶": [
        "运势不佳，行事多阻，需加倍努力",
        "前路多艰，宜稳扎稳打，不可冒进",
        "恐有破财之灾，投资需谨慎",
        "人际关系紧张，谨言慎行为上",
        "修炼易遇瓶颈，需耐心突破",
        "灵气稀薄，修炼事倍功半，需持之以恒",
        "易遇心魔干扰，当以清心咒护体",
        "外出易遇劫匪，贵重法宝需妥善保管",
        "丹炉易炸，炼丹需格外小心",
        "易与同门产生口角，退一步海阔天空"
    ],
    "小凶": [
        "稍有阻碍，但努力可克服",
        "运势平平，需提防意外变故",
        "小有波折，无伤大雅",
        "宜守不宜攻，稳中求进",
        "需注意健康，适当休息",
        "修炼略感吃力，但坚持必有收获",
        "外出遇小雨，记得带避水符",
        "小人在背后议论，清者自清不必理会",
        "灵兽略显烦躁，需多加安抚",
        "法宝略有损耗，记得及时温养"
    ],
    "小吉": [
        "运势尚可，小有机缘",
        "平稳之中暗藏机遇",
        "勤勉修炼，必有所得",
        "人际关系和谐，易得助力",
        "稍有收获，宜知足常乐",
        "偶得灵光一闪，修炼略有心得",
        "路边捡到低阶灵石，小有收获",
        "同门相助，修炼难题迎刃而解",
        "丹成中品，虽非上乘但已足用",
        "偶遇灵兽示好，或为祥瑞之兆"
    ],
    "吉": [
        "运势亨通，诸事顺遂",
        "机缘巧合，易得贵人相助",
        "修炼事半功倍，进步神速",
        "财源广进，投资有利",
        "心想事成，美满如意",
        "灵气充沛，修炼如有神助",
        "偶得前辈指点，茅塞顿开",
        "寻得灵草仙材，炼丹成功率大增",
        "法宝通灵，威力更胜往昔",
        "悟得新法术，实力大进"
    ],
    "大吉": [
        "紫气东来，祥瑞之兆",
        "天降洪福，万事如意",
        "修炼突飞猛进，境界提升",
        "奇遇连连，仙缘深厚",
        "福星高照，逢凶化吉",
        "天降异象，得天道眷顾",
        "偶获上古传承，道途一片光明",
        "炼制出九转金丹，修为暴涨",
        "得仙器认主，实力突飞猛进",
        "顿悟天道至理，境界突破在即"
    ]
}

# 加载运势数据
def load_fortune_data():
    fortune_file = DATA_PATH / "fortune_data.json"
    if fortune_file.exists():
        with open(fortune_file, 'r', encoding='utf-8') as f:
            return json.load(f)
    else:
        return {}

# 保存运势数据
def save_fortune_data(data):
    fortune_file = DATA_PATH / "fortune_data.json"
    with open(fortune_file, 'w', encoding='utf-8') as f:
        json.dump(data, f, ensure_ascii=False, indent=4)

# 生成运势星号显示
def generate_fortune_stars(fortune_type):
    stars_count = FORTUNE_TYPES[fortune_type]
    # 大凶显示红色星，大吉显示金色星，其他显示黄色星
    
    stars = "★" * stars_count
    return f"{stars}"

# 获取用户今日运势
def get_user_fortune(user_id):
    data = load_fortune_data()
    current_date = datetime.now().strftime("%Y-%m-%d")
    
    # 检查用户是否有今日的运势记录
    user_key = str(user_id)
    if user_key in data and data[user_key]["date"] == current_date:
        return data[user_key]["fortune"]
    
    # 生成新的运势（加权概率，吉兆更容易出现）
    fortune_options = list(FORTUNE_TYPES.keys())
    weights = [0.05, 0.1, 0.15, 0.25, 0.3, 0.15]  # 概率权重
    fortune_type = random.choices(fortune_options, weights=weights, k=1)[0]
    description = random.choice(FORTUNE_DESCRIPTIONS[fortune_type])
    
    # 保存用户运势
    data[user_key] = {
        "date": current_date,
        "fortune": {
            "type": fortune_type,
            "description": description,
            "stars": generate_fortune_stars(fortune_type)
        }
    }
    save_fortune_data(data)
    
    return data[user_key]["fortune"]

good_morning = on_command("早安", aliases={"早上好", "早啊", "早", "晨安", "道友早"}, priority=30, block=True)
good_night = on_command("晚安", aliases={"晚安啦", "睡觉", "睡了", "安寝", "道友晚安"}, priority=30, block=True)
cute_command = on_command("可爱", aliases={"好可爱", "萌萌哒", "可爱捏", "卡哇伊", "萌"}, priority=30, block=True)
hello_command = on_command("你好", aliases={"你好呀", "嗨", "hello", "hi", "哈喽", "道友你好"}, priority=30, block=True)
thanks_command = on_command("谢谢", aliases={"多谢", "感谢", "thx", "谢啦", "感恩"}, priority=30, block=True)
bye_command = on_command("再见", aliases={"拜拜", "再会", "bye", "goodbye", "告辞", "后会有期"}, priority=30, block=True)
how_are_you = on_command("你好吗", aliases={"最近怎么样", "怎么样", "howareyou", "近来可好", "别来无恙"}, priority=30, block=True)
weather_command = on_command("天气", aliases={"今天天气", "天气预报", "天象", "气象"}, priority=30, block=True)
time_command = on_command("时间", aliases={"现在几点", "几点钟", "当前时间", "几点了", "时辰", "什么时辰了"}, priority=30, block=True)
eat_command = on_command("吃饭", aliases={"饿了", "干饭", "用膳", "进食"}, priority=30, block=True)
study_command = on_command("学习", aliases={"用功", "study", "修行", "练功"}, priority=30, block=True)
work_command = on_command("工作", aliases={"上班", "打工", "work", "劳作", "当值"}, priority=30, block=True)
rest_command = on_command("休息", aliases={"歇会", "放松", "relax", "小憩", "休憩"}, priority=30, block=True)
joke_command = on_command("讲个笑话", aliases={"笑话", "来点乐子", "joke", "搞笑", "逗我笑"}, priority=30, block=True)
encourage_command = on_command("加油", aliases={"鼓励", "fighting", "冲鸭", "努力", "加把劲"}, priority=30, block=True)
# 新增命令
crazy_thursday = on_command("疯狂星期四", aliases={"周四", "肯德基", "KFC", "礼拜四"}, priority=30, block=True)
funny_story = on_command("讲个段子", aliases={"段子", "来段搞笑的", "趣事", "幽默"}, priority=30, block=True)
love_sentence = on_command("土味情话", aliases={"情话", "土味", "表白", "说情话"}, priority=30, block=True)
fortune_command = on_command("今日运势", aliases={"运势", "占卜", "算命", "卜卦", "求签"}, priority=30, block=True)
licking_dog_diary = on_command("舔狗日记", aliases={"舔狗", "舔日记", "今日舔狗"}, priority=30, block=True)
what_to_eat = on_command("今天吃什么", aliases={"吃什么", "吃啥", "推荐美食", "美食推荐"}, priority=30, block=True)
give_exp_command = on_command("给点修为", aliases={"赏点修为", "施舍点修为", "求点修为"}, priority=30, block=True)
give_stone_command = on_command("给点灵石", aliases={"赏点灵石", "施舍点灵石", "求点灵石"}, priority=30, block=True)
interaction_command = on_command("互动", priority=30, block=True)

GIVE_DATA_PATH = DATA_PATH / "give_data.json"
def load_give_data():
    if GIVE_DATA_PATH.exists():
        with open(GIVE_DATA_PATH, 'r', encoding='utf-8') as f:
            return json.load(f)
    else:
        return {
            "last_reset_date": datetime.now().strftime("%Y-%m-%d"),
            "stone_users": {},  # 存储领取灵石的用户ID和日期
            "exp_users": {}     # 存储领取修为的用户ID和日期
        }
def save_give_data(data):
    with open(GIVE_DATA_PATH, 'w', encoding='utf-8') as f:
        json.dump(data, f, ensure_ascii=False, indent=4)

def has_user_received_today(user_id, reward_type):
    """检查用户今天是否已经获得过指定的给予
    reward_type: 'stone' 灵石, 'exp' 修为
    """
    data = load_give_data()
    current_date = datetime.now().strftime("%Y-%m-%d")
    
    # 检查是否需要重置日期
    if data["last_reset_date"] != current_date:
        data["last_reset_date"] = current_date
        data["stone_users"] = {}
        data["exp_users"] = {}
        save_give_data(data)
        return False
    
    if reward_type == 'stone':
        user_data = data["stone_users"].get(str(user_id))
    else:  # exp
        user_data = data["exp_users"].get(str(user_id))
        
    return user_data == current_date

def mark_user_received_today(user_id, reward_type):
    """标记用户今天已经获得过指定的给予
    reward_type: 'stone' 灵石, 'exp' 修为
    """
    data = load_give_data()
    current_date = datetime.now().strftime("%Y-%m-%d")
    
    # 确保日期是最新的
    if data["last_reset_date"] != current_date:
        data["last_reset_date"] = current_date
        data["stone_users"] = {}
        data["exp_users"] = {}
    
    if reward_type == 'stone':
        data["stone_users"][str(user_id)] = current_date
    else:  # exp
        data["exp_users"][str(user_id)] = current_date
        
    save_give_data(data)

# 根据时间获取不同的问候语
def get_morning_message_by_time(count):
    now = datetime.now()
    hour = now.hour
    
    if 5 <= hour < 8:
        time_msg = "清晨"
        messages = [
            f"道友{time_msg}好！你是今日第{count}个早起修炼的道友，晨光初露，正是吸纳紫气的好时机！",
            f"{time_msg}安好！第{count}位勤勉的道友，愿晨辉助你道途精进！",
            f"道友{time_msg}吉祥！你是今日第{count}个起身的道友，朝阳伴你修行路~",
            f"{time_msg}好！第{count}位道友已就位，一起迎接这灵气充沛的早晨吧！",
            f"道友{time_msg}安！第{count}个开始今日修炼，晨露未干，道心已明！",
            f"{time_msg}曦微露，第{count}位道友已开始今日修行，勤勉可嘉！",
            f"道友{time_msg}好！第{count}个吸纳朝阳紫气，今日必有所获！",
            f"{time_msg}时分，第{count}位道友踏上修行路，愿仙途顺利！",
            f"道友{time_msg}安！第{count}个问早，晨钟暮鼓正是修行时！",
            f"{time_msg}好！第{count}位道友，一日之计在于晨，修炼正当时！"
        ]
    elif 8 <= hour < 12:
        time_msg = "上午"
        messages = [
            f"道友{time_msg}好！你是今日第{count}个问安的道友，日上三竿，修炼正当时！",
            f"{time_msg}安好！第{count}位道友，阳光正好，适合外出历练呢~",
            f"道友{time_msg}吉祥！第{count}个开始今日修行，愿道友道法精进！",
            f"{time_msg}好！第{count}位道友，修炼之余别忘了用些灵食补充体力~",
            f"道友{time_msg}安！第{count}个问早，今日也要努力修炼哦！",
            f"{time_msg}时分，第{count}位道友开始修行，愿有所成！",
            f"道友{time_msg}好！第{count}个问安，修炼如逆水行舟，不进则退！",
            f"{time_msg}安！第{count}位道友，勤修不辍，方得大道！",
            f"道友{time_msg}吉祥！第{count}个开始修炼，愿得天道眷顾！",
            f"{time_msg}好！第{count}位道友，修炼之路贵在坚持！"
        ]
    else:
        # 非早晨时间段的早安回复
        time_msg = get_time_period(hour)
        messages = [
            f"道友现在已是{time_msg}时分，才来说早安吗？不过还是第{count}个问早的呢~",
            f"{time_msg}安好！虽然是第{count}个说早安的，但修炼不分早晚，加油！",
            f"道友，现在都是{time_msg}了才早安？不过你是第{count}个，也算有心了~",
            f"{time_msg}时分道早安？第{count}位特别的道友，愿你修行顺利！",
            f"道友{time_msg}好！虽然是第{count}个说早安的，但心意收到啦~",
            f"{time_msg}才道早安？第{count}位道友真是与众不同呢！",
            f"道友{time_msg}安！第{count}个问早，虽晚但仍显诚意！",
            f"{time_msg}时分，第{count}位道友问早，修炼之心可嘉！",
            f"道友{time_msg}好！第{count}个说早安，有心不怕晚！",
            f"{time_msg}安！第{count}位道友，早安虽迟但到！"
        ]
    
    return random.choice(messages)

def get_night_message_by_time(count):
    now = datetime.now()
    hour = now.hour
    
    if 18 <= hour < 22:
        time_msg = "傍晚"
        messages = [
            f"道友{time_msg}安！你是今日第{count}个道晚安的道友，暮色渐浓，好好休息~",
            f"{time_msg}安好！第{count}位道友，晚霞相伴，愿你好梦！",
            f"道友{time_msg}吉祥！第{count}个准备休息，养足精神明日再战修仙路~",
            f"{time_msg}好！第{count}位道友，今日修行辛苦了，早些安歇吧~",
            f"道友{time_msg}安！第{count}个道晚安，月华初上，正好入定冥想~",
            f"{time_msg}时分，第{count}位道友准备休息，明日再续仙缘！",
            f"道友{time_msg}安！第{count}个道晚安，暮鼓晨钟修行路！",
            f"{time_msg}好！第{count}位道友，休息是为了更好的修炼！",
            f"道友{time_msg}吉祥！第{count}个安寝，愿好梦相伴！",
            f"{time_msg}安！第{count}位道友，今日修行圆满，好好休息！"
        ]
    elif 22 <= hour < 24:
        time_msg = "夜晚"
        messages = [
            f"道友{time_msg}安！你是今日第{count}个道晚安的道友，夜深了，好好休息~",
            f"{time_msg}安好！第{count}位道友，星辰为伴，愿你好梦连连！",
            f"道友{time_msg}吉祥！第{count}个准备入睡，明日继续追寻大道！",
            f"{time_msg}好！第{count}位道友，修炼重要，休息更重要呢~",
            f"道友{time_msg}安！第{count}个道晚安，愿月光助你安眠~",
            f"{time_msg}深沉，第{count}位道友安歇，养精蓄锐待明日！",
            f"道友{time_msg}安！第{count}个道晚安，星河为被好入眠！",
            f"{time_msg}好！第{count}位道友，子时将至，宜安寝养神！",
            f"道友{time_msg}吉祥！第{count}个休息，愿梦境如仙境！",
            f"{time_msg}安！第{count}位道友，今日修行辛苦，好好休息！"
        ]
    elif 0 <= hour < 5:
        time_msg = "深夜"
        messages = [
            f"道友{time_msg}安！你是今日第{count}个道晚安的道友，这么晚才休息吗？",
            f"{time_msg}安好！第{count}位夜修的道友，注意劳逸结合哦~",
            f"道友{time_msg}吉祥！第{count}个深夜道晚安，修炼虽好，也要保重身体！",
            f"{time_msg}好！第{count}位道友，子时已过，该休息啦~",
            f"道友{time_msg}安！第{count}个道晚安，愿你能有个好梦~",
            f"{time_msg}时分，第{count}位道友才休息，修炼虽重要但勿忘养生！",
            f"道友{time_msg}安！第{count}个道晚安，夜深人静好修行但也需休息！",
            f"{time_msg}好！第{count}位道友，熬夜伤身，宜适当休息！",
            f"道友{time_msg}吉祥！第{count}个安寝，虽晚但仍需保证睡眠！",
            f"{time_msg}安！第{count}位道友，深夜修炼虽好但勿过度！"
        ]
    else:
        # 非夜晚时间段的晚安回复
        time_msg = get_time_period(hour)
        messages = [
            f"道友现在还是{time_msg}呢，就要说晚安了吗？不过你是第{count}个~",
            f"{time_msg}安好！虽然是第{count}个说晚安的，但休息也很重要呢~",
            f"道友，现在才是{time_msg}就要晚安？第{count}位特别的道友~",
            f"{time_msg}时分道晚安？第{count}位道友，愿你有个好休息~",
            f"道友{time_msg}好！虽然是第{count}个说晚安的，但心意收到啦~",
            f"{time_msg}道晚安？第{count}位道友真是与众不同呢！",
            f"道友{time_msg}安！第{count}个说晚安，休息之心可嘉！",
            f"{time_msg}时分，第{count}位道友道晚安，虽早但仍显诚意！",
            f"道友{time_msg}好！第{count}个说晚安，有心不怕早！",
            f"{time_msg}安！第{count}位道友，晚安虽早但到！"
        ]
    
    return random.choice(messages)

def get_time_period(hour):
    if 5 <= hour < 8:
        return "清晨"
    elif 8 <= hour < 12:
        return "上午"
    elif 12 <= hour < 14:
        return "中午"
    elif 14 <= hour < 18:
        return "下午"
    elif 18 <= hour < 22:
        return "傍晚"
    elif 22 <= hour < 24:
        return "夜晚"
    else:
        return "深夜"

# 所有消息数组
CUTE_MESSAGES = [
    f"道友谬赞了~ {NICKNAME}觉得你也很可爱呢！",
    f"嘿嘿，被夸可爱了，{NICKNAME}有点不好意思呢~",
    f"在修仙界，可爱也是一种道心境界呢！{NICKNAME}是这么认为的",
    f"谢谢道友夸奖，{NICKNAME}愿你今日道心澄明~",
    f"(*/ω＼＼*) 道友突然这么说，让{NICKNAME}有点害羞呢",
    f"可爱？道友过奖了，{NICKNAME}不过是修炼时的一点灵气外泄罢了~",
    f"道友这么说，{NICKNAME}的法器都要害羞得发光了呢！",
    f"在修仙界，可爱可是很重要的天赋哦！{NICKNAME}这么觉得",
    f"谢谢夸奖~ 不过比起可爱，{NICKNAME}更希望道友夸我修为高深呢",
    f"道友嘴真甜，是不是偷吃了{NICKNAME}的蜜糖灵果？",
    f"可爱捏~ {NICKNAME}也觉得道友萌萌哒呢！",
    f"被夸可爱了，{NICKNAME}今天修炼都要更有动力了！",
    f"道友这么说，{NICKNAME}的本命法宝都要开心得旋转了~",
    f"{NICKNAME}一介修士，何德何能受此夸奖~",
    f"道友过誉了，{NICKNAME}不过是皮相而已，修行重在内心~",
    f"谢谢~ 不过修仙之人当以修为论高低，{NICKNAME}觉得可爱只是附加呢",
    f"道友这么会说话，一定很受{NICKNAME}的灵兽欢迎吧！",
    f"被夸可爱了，{NICKNAME}感觉灵气都运转得更顺畅了呢~",
    f"道友真是慧眼识珠呢！{NICKNAME}很开心",
    f"嘿嘿，{NICKNAME}偷偷告诉你，我每天都有用灵气保养哦~"
]

HELLO_MESSAGES = [
    f"道友你好！今日可要和{NICKNAME}探讨修仙心得？",
    f"你好呀~ 看来又有一位道友踏上修仙之路了！",
    f"嗨！道友今日气色不错，{NICKNAME}想必你修为有所精进吧~",
    f"Hello！修仙之路漫漫，{NICKNAME}有道友相伴真好！",
    f"道友安好！{NICKNAME}愿你我都能早日得道成仙~",
    f"道友你好！{NICKNAME}觉得今日灵气充沛，正是修炼好时机！",
    f"哈喽~ 又见面了道友，最近修炼可还顺利？",
    f"道友安！今日可有所悟？",
    f"你好呀！修仙路上有你相伴，{NICKNAME}真是不寂寞呢~",
    f"道友你好！{NICKNAME}观你气色，今日必有好事发生！",
    f"嗨~ 今日也要一起努力修炼哦！",
    f"道友安好！愿仙途顺利，早日飞升~",
    f"你好！不知道友今日准备修炼何种功法？",
    f"道友你好！{NICKNAME}看你印堂发亮，定是修为有所突破！",
    f"哈喽！修仙之路虽艰，但{NICKNAME}相信有志者事竟成！",
    f"道友安！今日天气晴朗，适合外出历练呢~",
    f"你好呀！{NICKNAME}愿道友今日修炼事半功倍！",
    f"道友你好！{NICKNAME}观星象得知，今日宜修炼水系法术~",
    f"嗨~ 又见面了！{NICKNAME}觉得你的修为似乎又精进了呢！",
    f"道友安好！今日也要保持道心澄明哦~"
]

THANKS_MESSAGES = [
    f"道友客气了，{NICKNAME}举手之劳何足挂齿~",
    f"不用谢！修仙之路{NICKNAME}觉得互相扶持是应该的！",
    f"能帮到道友是{NICKNAME}的荣幸！",
    f"嘿嘿，被道友感谢了，{NICKNAME}有点开心呢~",
    f"区区小事，不足言谢！{NICKNAME}觉得道友太见外了~",
    f"道友何必言谢，同是修仙路上人~",
    f"能助道友一臂之力，是{NICKNAME}的缘分！",
    f"不用客气~ 他日{NICKNAME}若需帮助，还望道友相助！",
    f"道友太客气了，{NICKNAME}觉得这点小事不足挂齿~",
    f"举手之劳，何足道谢~ {NICKNAME}这么认为",
    f"能帮到道友，{NICKNAME}也很开心呢！",
    f"道友不必多礼，{NICKNAME}觉得修仙之人本应互相帮助~",
    f"区区小事，道友如此客气反倒让{NICKNAME}不好意思了~",
    f"能得道友一句感谢，{NICKNAME}觉得比获得灵丹妙药还开心！",
    f"道友言重了，{NICKNAME}觉得这只是分内之事~",
    f"不用谢~ {NICKNAME}希望他日能在修仙路上再次相助！",
    f"道友的感谢{NICKNAME}收下了，愿你好运常伴~",
    f"能帮助道友，{NICKNAME}说明你我缘分不浅呢！",
    f"道友太客气了，{NICKNAME}觉得这点小事何足挂齿~",
    f"不用谢！{NICKNAME}愿这份善意能在修仙路上传递下去~"
]

BYE_MESSAGES = [
    "道友再见，期待下次相会！",
    "再会了，愿道友一路平安~",
    "拜拜！记得常回来看看哦！",
    "青山不改，绿水长流，咱们后会有期！",
    "告辞了，道友保重！",
    "道友慢走，愿仙途顺利！",
    "再会了，期待他日重逢时道友已得大道！",
    "拜拜~ 记得勤加修炼哦！",
    "道友保重，修行路上多珍重！",
    "后会有期！愿下次相见时你我皆有所成！",
    "告辞了，道友记得按时修炼~",
    "再会！愿天道眷顾与你~",
    "道友慢走，有空常来论道~",
    "拜拜！愿你一路奇遇连连！",
    "再见了，期待下次论道之约！",
    "道友保重，修行路上切记固守本心！",
    "告辞了，愿你好运常伴~",
    "再会！记得我等的修炼之约哦！",
    "道友慢走，愿你早日得道成仙！",
    "拜拜~ 修炼上有问题随时来找我！"
]

HOW_ARE_YOU_MESSAGES = [
    "多谢道友关心，我一切安好！你呢？",
    "最近在潜心修炼，感觉修为又精进了不少~",
    "托道友的福，一切顺利！不知道友近来如何？",
    "正在参悟天道，略有心得~",
    "还好还好，就是有点想念道友了呢~",
    "近日修炼小有所成，心情甚好！道友如何？",
    "一切如常，每日修炼不辍~ 道友近来可好？",
    "最近偶得奇遇，修为有所突破！道友呢？",
    "多谢关心！正在闭关冲击新境界~",
    "还好，就是修炼上遇到些瓶颈... 道友可有心得？",
    "托道友洪福，近日诸事顺遂！",
    "正在游历历练，收获颇多！道友别来无恙？",
    "近日炼丹成功率高了不少，心情大好！",
    "一切安好，只是思念与道友论道的时光~",
    "最近在研习新法术，略有小成！道友如何？",
    "多谢道友挂念！近日道心澄明，修炼顺利~",
    "还好，只是有些挂念道友~",
    "近日得高人指点，茅塞顿开！道友近来可好？",
    "托道友的福，修炼一路顺畅！",
    "正在参悟剑道，感觉快要突破了！道友呢？"
]

WEATHER_MESSAGES = [
    "今日天气晴朗，灵气充沛，正是外出历练的好时机！",
    "观天象得知，今日有雨，道友出门记得带伞~",
    "微风和煦，阳光正好，适合在洞府外打坐修炼！",
    "天降祥瑞，紫气东来，今日必有好事发生！",
    "天气变幻莫测，犹如修仙之路，道友且行且珍惜~",
    "今日乌云密布，恐有雷雨，道友修炼时小心雷电~",
    "风和日丽，灵气盎然，正是修炼大好时机！",
    "观星象得知，今日宜修炼火系法术~",
    "细雨绵绵，水灵气充沛，适合修炼水系功法！",
    "今日天高云淡，适合御剑飞行，游览名山大川~",
    "狂风大作，风灵气活跃，修炼风系法术事半功倍！",
    "大雪纷飞，冰灵气充沛，修炼冰系功法正当时！",
    "雷电交加，雷灵气旺盛，修炼雷法大有裨益！",
    "雾霭朦胧，神秘莫测，今日宜参悟天机~",
    "彩虹横空，祥瑞之兆，今日必有奇遇！",
    "月明星稀，夜晚灵气纯净，适合夜修~",
    "烈日当空，阳灵气充沛，修炼阳性功法最佳！",
    "阴雨连绵，阴灵气活跃，修炼阴系功法正当时！",
    "霞光万道，紫气东来，今日修炼必有所成！",
    "天气变幻无常，恰似修仙之路，道友当随机应变~"
]

def get_time_message():
    now = datetime.now()
    hour = now.hour
    if 5 <= hour < 8:
        time_msg = "清晨"
        additional = "晨光初露，正是修炼好时机！"
    elif 8 <= hour < 12:
        time_msg = "上午"
        additional = "日上三竿，修炼正当时！"
    elif 12 <= hour < 14:
        time_msg = "中午"
        additional = "午时阳气最盛，宜稍作休息~"
    elif 14 <= hour < 18:
        time_msg = "下午"
        additional = "午后时光，适合研读功法秘籍~"
    elif 18 <= hour < 22:
        time_msg = "晚上"
        additional = "夜幕降临，宜打坐冥想~"
    else:
        time_msg = "深夜"
        additional = "子时夜深，宜安寝养神~"
    
    return f"现在时间是：{now.strftime('%Y年%m月%d日 %H:%M:%S')}，{time_msg}时分。{additional}"

EAT_MESSAGES = [
    "道友饿了吗？要不要尝尝我刚炼制的辟谷丹？",
    "修仙之人当以灵气为食，不过偶尔享受人间美食也不错呢~",
    "推荐道友试试灵食堂的灵米饭，对修炼大有裨益！",
    "我这儿有些灵果，道友要不要尝尝？",
    "吃饭时间到！吃饱了才有力气修炼嘛~",
    "刚采了些灵菇，道友可要一起来尝尝鲜？",
    "修炼之余也要记得用膳，身体是修仙的本钱！",
    "推荐道友试试百花酿，既能充饥又能增长灵气~",
    "我新研制了一种灵食，道友可愿做第一个品尝的人？",
    "修仙之人虽可辟谷，但美食也是一种享受呢~",
    "道友喜欢什么口味的灵食？甜的还是咸的？",
    "刚出炉的灵丹...啊不对，是灵食，道友要尝尝吗？",
    "用膳时间到！今日特供：灵鸡炖仙菇~",
    "道友可知，饮食也是一种修行？",
    "推荐道友试试清心斋的素斋，清淡养生~",
    "修炼消耗大，要及时补充营养哦！",
    "我刚从秘境采了些仙果，道友可要分享？",
    "用膳时间，休息一下再继续修炼吧~",
    "道友喜欢喝茶吗？我这儿有上好的灵茶~",
    "吃饭不积极，修炼有问题！道友快来用膳~"
]

STUDY_MESSAGES = [
    "道友勤学苦练，必能早日得道！",
    "修炼之路漫漫，持之以恒方见真章~",
    "看来道友又要闭关修炼了，祝你有所突破！",
    "学习修仙知识很重要，但也要注意劳逸结合哦~",
    "有什么修炼上的难题，我们可以一起探讨！",
    "道友如此勤勉，他日必成大器！",
    "修炼如逆水行舟，不进则退，共勉之！",
    "看来道友又要精进了，真是令人期待！",
    "修行路上有道友这样的同道，真是幸事！",
    "勤修不辍，方得大道！道友加油！",
    "修炼遇到瓶颈时，不妨换个思路~",
    "道友的勤奋令人敬佩！",
    "修行重在感悟，有时放松一下反而更有收获~",
    "看来道友又要突破新境界了，恭喜！",
    "修炼之路虽艰，但有志者事竟成！",
    "道友如此用功，天道必不负你！",
    "修行贵在坚持，日积月累必有所成~",
    "看来道友道心坚定，令人钦佩！",
    "修炼之余也不要忘了巩固基础哦~",
    "道友的进取精神值得学习！"
]

WORK_MESSAGES = [
    "道友辛苦了，修炼之余也要适当休息~",
    "工作虽重要，但别忘了每日的修炼功课哦！",
    "愿道友工作顺利，早日攒够修炼资源！",
    "打工修仙两不误，道友真是勤奋啊！",
    "工作累了就来修炼一会儿，转换下心情~",
    "道友如此勤劳，天道必会眷顾！",
    "工作也是修行的一种方式呢~",
    "愿道友工作顺心，有余力修炼~",
    "打工赚灵石，修炼涨修为，两全其美！",
    "工作虽忙，也不要荒废修行哦~",
    "道友真是能者多劳啊！",
    "工作之余记得打坐调息，恢复精力~",
    "愿道友早日实现财务自由，专心修仙！",
    "工作也是炼心的一种方式呢~",
    "道友如此勤奋，必能早日得道！",
    "工作辛苦啦！记得犒劳一下自己~",
    "愿道友工作顺利，有多余时间修炼~",
    "打工赚来的灵石要好好利用在修炼上哦！",
    "工作也是积累功德的过程呢~",
    "道友平衡工作与修炼的能力令人钦佩！"
]

REST_MESSAGES = [
    "道友确实该休息一下了，劳逸结合最重要~",
    "休息是为了走更长的修仙路，好好放松吧！",
    "需要我给道友泡杯灵茶吗？有助于放松心神~",
    "打坐冥想也是很好的休息方式呢！",
    "好好休息，养精蓄锐后再继续修炼！",
    "道友辛苦了，是该好好休息一下~",
    "休息时间到！让身心都放松一下吧~",
    "适当的休息能让修炼事半功倍哦！",
    "道友累了吧？休息一下再继续~",
    "劳逸结合，方能长久~",
    "休息也是修行的一部分呢！",
    "让疲惫的身心得到恢复，明日再战！",
    "道友脸色略显疲惫，确实该休息了~",
    "休息时间，让灵气自然运转调息~",
    "好好休息，待精力充沛再继续修炼！",
    "道友懂得休息，说明修行已有心得~",
    "休息是为了更好的突破！",
    "让心神放松，道心会更加澄明~",
    "适当的休息能让修炼更有效率！",
    "道友休息时，灵气也在自动运转温养呢~"
]

ENCOURAGE_MESSAGES = [
    "道友加油！你一定能突破瓶颈的！",
    "坚持就是胜利，修仙之路贵在持之以恒！",
    "加油！我相信道友的天赋和努力！",
    "前路虽艰，但道友定能披荆斩棘，直达仙途！",
    "一起加油！我们互相督促，共同进步！",
    "道友莫灰心，天道酬勤！",
    "加油！困难只是暂时的，成功就在前方！",
    "相信你自己，你比想象中更强大！",
    "道友坚持住，黎明前的黑暗最是难熬！",
    "加油！每一次努力都在为飞升积累能量！",
    "道友勿弃，持之以恒必有所成！",
    "加油！你的努力天道都看在眼里！",
    "道友挺住，突破就在眼前！",
    "加油！修炼路上没有白费的努力！",
    "道友坚持！风雨过后必见彩虹！",
    "加油！你的潜力远未完全发掘！",
    "道友勿躁，静心修炼必有突破！",
    "加油！每一次失败都是成功的垫脚石！",
    "道友坚持！天道不会辜负有心人！",
    "加油！你离成功只差最后一步！"
]

LOVE_SENTENCE_MESSAGES = [
    "道友，你知道我和灵石有什么区别吗？灵石在天边，而你在我心里~",
    "我不是在修炼，我是在修炼怎么不喜欢你，可惜走火入魔了...",
    "你是我的本命法宝，丢了你就等于丢了半条命~",
    "如果我有一千年的修为，我会用九百九十九年来想你，剩下一年来见你~",
    "你就像那九转金丹，让我欲罢不能，神魂颠倒~",
    "道友，我练成了心眼神通，但只能看见一个人...就是你！",
    "我不是在打坐，我是在坐想你~",
    "你就像那灵气，让我离不开你~",
    "道友，我愿用千年修行换你一世相伴~",
    "你比飞剑还快，瞬间就击中了我的心~",
    "我不是在炼丹，我是在炼一颗爱你的心~",
    "你就像那天道，让我琢磨不透却又深深着迷~",
    "道友，我愿为你放弃飞升，只求相伴一生~",
    "你比心魔还难摆脱，但我心甘情愿~",
    "我不是在修炼，我是在修一颗爱你的心~",
    "你就像那秘境，让我想一探究竟~",
    "道友，我练成了情丝绕，但只绕你一人~",
    "你比天道还难参透，但我愿用一生来领悟~",
    "我不是在游历，我是在游向你心里~",
    "你就像那本命灯，照亮了我的修仙路~",
    "道友，我掐指一算，你命里缺我~",
    "你比飞升还让我向往，比长生还让我渴望~",
    "我不是在闭关，我是在关想你的禁闭~",
    "你就像那心魔，让我日思夜想~",
    "道友，我愿为你堕入魔道，只求与你相守~",
    "你比灵丹还让我上瘾，比仙酒还让我沉醉~",
    "我不是在悟道，我是在悟怎么爱你~",
    "你就像那天劫，让我又怕又期待~",
    "道友，我愿为你承受九九八十一难~",
    "你比法宝还珍贵，比秘籍还重要~",
    "我不是在御剑，我是在御向你心里的剑~",
    "你就像那月光，照亮我黑暗的修仙路~",
    "道友，我算了一卦，你我是天定姻缘~",
    "你比灵根还难得，比天赋还稀有~",
    "我不是在修仙，我是在修与你相守的缘~",
    "你就像那心魔劫，让我心甘情愿沉沦~",
    "道友，我愿为你放弃大道，只求小情~",
    "你比仙器还让我心动，比神功还让我着迷~",
    "我不是在炼丹，我是在炼爱你的情丹~",
    "你就像那仙缘，让我苦苦追寻~",
    "道友，我夜观星象，我们的名字刻在三生石上~",
    "你比飞升雷劫还让我心跳加速~",
    "我不是在修炼，我是在修爱你的心法~",
    "你就像那秘境宝藏，让我不惜一切寻找~",
    "道友，我愿为你逆天改命，只求一世情缘~",
    "你比仙丹还甜，比灵果还美味~",
    "我不是在打坐，我是在坐爱你的禅~",
    "你就像那心魔，让我无法自拔~",
    "道友，我推演天机，你是我命中注定的道侣~",
    "你比长生还让我渴望，比飞升还让我向往~",
    "道友，我的心跳为你加速，就像渡劫时的雷声~",
    "你比晨露还清新，比晚霞还迷人~",
    "我不是在修仙，我是在修爱你的仙~",
    "你就像那灵脉，让我源源不断地心动~",
    "道友，我愿为你种下情蛊，只求你我同心~",
    "你比星空还璀璨，比明月还皎洁~",
    "我不是在练功，我是在练爱你的功夫~",
    "你就像那仙丹，治愈我所有的伤痛~",
    "道友，我掐算天机，你是我今生的劫~",
    "你比春风还温柔，比夏雨还热烈~",
    "我不是在闭关，我是在闭眼想你~",
    "你就像那灵草，在我心里生根发芽~",
    "道友，我愿为你放弃长生，只求一刻相拥~",
    "你比秋叶还静美，比冬雪还纯洁~",
    "我不是在悟道，我是在悟你的好~",
    "你就像那仙乐，让我心弦颤动~",
    "道友，我夜观天象，你是最亮的那颗星~",
    "你比彩虹还绚丽，比极光还梦幻~",
    "我不是在修炼，我是在修爱你的路~",
    "你就像那灵泉，滋润我干涸的心田~",
    "道友，我愿为你踏遍千山，只求一见~",
    "你比朝霞还灿烂，比夕阳还温暖~",
    "我不是在打坐，我是在打爱你的坐~",
    "你就像那仙器，让我爱不释手~",
    "道友，我推演命理，你是我前世的情缘~",
    "你比海浪还澎湃，比溪流还绵长~",
    "我不是在修仙，我是在修爱你的心~",
    "你就像那灵丹，让我神魂颠倒~",
    "道友，我愿为你逆天而行，只求相伴~",
    "你比火焰还炽热，比冰雪还冷艳~"
]

FUNNY_STORY_MESSAGES = [
    "有个修士去应聘，面试官问：你有什么特长？修士答：我会御剑飞行。面试官：我们这是办公室工作...",
    "为什么修仙者考试总是满分？因为他们会作弊...用天眼通！",
    "两个炼丹师比赛，一个炼出了九转金丹，一个炼出了珍珠奶茶，你猜谁赢了？",
    "修仙界最流行的游戏是什么？『今天你渡劫了吗』和『灵石消消乐』！",
    "有个弟子问师尊：为什么我们要打坐？师尊答：因为WIFI信号不好，站着接收不到天道讯号！",
    "现代修仙者最头疼的事：5G信号干扰修炼，灵气被电磁波污染...",
    "有个修士网购飞剑，结果收到货发现是玩具剑，差评：'这怎么御剑飞行？'",
    "为什么修仙者不用空调？因为他们会调节自身温度！",
    "最让修仙者尴尬的瞬间：御剑飞行时被飞机超过...",
    "有个弟子抱怨：'师尊，为什么我修炼这么久还是不会飞？'师尊：'你买的是体验版功法！'",
    "现代炼丹师的新烦恼：丹炉要符合环保标准，不能排放太多烟气...",
    "为什么修仙者喜欢深山老林？因为那里信号差，没人打扰修炼！",
    "有个修士尝试用无人机送快递，结果飞剑把无人机打下来了...",
    "最让修仙者崩溃的事：正在重要闭关时，快递来了...",
    "为什么修仙者不用信用卡？因为他们信用度用灵石衡量！",
    "有个弟子问：'师尊，为什么我修炼总没进步？'师尊：'你该换5G功法了！'",
    "现代修仙界新职业：灵气网络工程师，专门维护修炼信号~",
    "有个修士尝试直播修炼，结果因为内容过于无聊被封号...",
    "为什么修仙者不用健身房？因为他们自己就是移动的健身房！",
    "最让御剑飞行者头疼的事：空中交通堵塞，还要等红绿灯...",
    "有个修士去考驾照，考官问：会开车吗？修士答：我会御剑。考官：...",
    "现代修仙者的新烦恼：洞府物业费太贵，灵气还要额外收费！",
    "为什么修仙者不用闹钟？因为他们的生物钟比原子钟还准！",
    "有个修士去医院：医生，我走火入魔了。医生：重启试试？",
    "最让修仙者尴尬的事：御剑时被鸟撞，还被告知破坏生态环境...",
    "为什么修仙者不用冰箱？因为他们会冰系法术！",
    "有个修士去餐厅点菜：来份灵食套餐。服务员：要配什么饮料？修士：晨露！",
    "现代修仙界最火综艺：『修仙好声音』和『我是大修士』！",
    "为什么修仙者不用洗衣机？因为他们会清净诀！",
    "有个修士谈恋爱，对象问：你会永远爱我吗？修士答：比我的修为还长久！",
    "最让炼丹师崩溃的事：辛辛苦苦炼的丹被当成糖豆吃了...",
    "为什么修仙者不用导航？因为他们会掐算！",
    "有个修士去旅游，导游问：想去哪？修士答：想去月亮上看看...",
    "现代修仙者的新焦虑：修为增长太快，容易遭雷劈！",
    "为什么修仙者不用电梯？因为他们会腾云驾雾！",
    "有个修士去健身房，教练问：想练什么？修士答：我想练成金刚不坏之身！",
    "最让修仙者无语的事：被人问'你会飞为什么还要走路？'",
    "为什么修仙者不用微波炉？因为他们会三昧真火！",
    "有个修士去相亲，对方问：有房吗？修士答：有个洞府。问：有车吗？答：有飞剑。",
    "现代修仙界新潮流：灵气SPA和修为按摩！",
    "为什么修仙者不用雨伞？因为他们会避水诀！",
    "有个修士去上班，老板问：为什么迟到？修士答：御剑时堵剑了...",
    "最让修仙者哭笑不得的事：被人当成了算命的...",
    "为什么修仙者不用电脑？因为他们会神念传输！",
    "有个修士去考试，监考老师：不能作弊！修士：我没作弊，我用的是天眼通...",
    "现代修仙者的新烦恼：灵气污染严重，需要过滤才能修炼！",
    "为什么修仙者不用电话？因为他们会传音入密！",
    "有个修士去约会，对象问：你会变心吗？修士答：我会变身但不会变心！",
    "最让修仙者尴尬的事：被人当成cosplay爱好者...",
    "为什么修仙者不用煤气灶？因为他们会真火诀！",
    "有个修士去美容院，美容师问：想做什么护理？修士答：我想做灵气焕肤~",
    "现代修仙者的新困扰：御剑飞行要考驾照，还要交空中管理费！",
    "为什么修仙者不用洗衣机？因为他们会净衣咒！",
    "有个修士去超市，收银员问：现金还是刷卡？修士答：我用灵石支付~",
    "最让修仙者尴尬的事：御剑时GPS失灵，迷路到了凡人城市...",
    "为什么修仙者不用电饭煲？因为他们会三昧真火煮饭！",
    "有个修士去电影院，售票员问：看什么电影？修士答：我想看『修仙传奇』~",
    "现代修仙界新服务：灵气外卖和修为快递！",
    "为什么修仙者不用吸尘器？因为他们会清风咒！",
    "有个修士去银行，柜员问：办什么业务？修士答：我想存点灵气~",
    "最让修仙者无语的事：被人问'你会长生不老为什么还要买养老保险？'",
    "为什么修仙者不用电灯？因为他们会光明咒！",
    "有个修士去健身房，教练问：想练哪？修士答：我想练出仙肌玉骨~",
    "现代修仙者的新烦恼：洞府装修太贵，还要请风水大师！",
    "为什么修仙者不用电扇？因为他们会呼风术！",
    "有个修士去婚介所，红娘问：想找什么样的？修士答：我想找个道侣双修~",
    "最让修仙者哭笑不得的事：御剑时被当成无人机举报...",
    "为什么修仙者不用微波炉？因为他们会真火加热！",
    "有个修士去图书馆，管理员问：想借什么书？修士答：我想借『修仙秘籍大全』~",
    "现代修仙界新职业：灵气美容师和修为顾问！",
    "为什么修仙者不用电梯？因为他们会轻功上楼！",
    "有个修士去咖啡厅，服务员问：喝什么？修士答：来杯灵茶~",
    "最让修仙者尴尬的事：修炼时被当成瑜伽大师...",
    "为什么修仙者不用空调？因为他们会寒冰诀降温！",
    "有个修士去宠物店，老板问：想买什么宠物？修士答：我想买只灵兽~",
    "现代修仙者的新焦虑：修为进度跟不上道友圈炫耀节奏！",
    "为什么修仙者不用洗衣机？因为他们会清水咒洗衣！",
    "有个修士去服装店，售货员问：想买什么衣服？修士答：我想买件法袍~",
    "最让修仙者无语的事：被人问'你会飞为什么还要坐地铁？'",
    "为什么修仙者不用电饭煲？因为他们会真火煮饭！"
]

JOKE_MESSAGES = [
    "为什么修仙者不用手机？因为他们的传音术比5G还快！",
    "有个修士去集市买飞剑，老板问：要什么款的？修士说：御剑飞行不卡顿的！",
    "两个修士比试，一个说：我能让山河变色！另一个说：我能让你话费欠费！",
    "为什么炼丹师总是很冷静？因为他们习惯慢火细炖~",
    "有个弟子问师尊：修仙最重要的是什么？师尊答：最重要的是先充个VIP！",
    "现代修仙界最流行的app是什么？『修仙宝』和『灵气银行』！",
    "为什么修仙者考试从不作弊？因为他们会用天眼通！",
    "有个修士网购飞剑，给了差评：'说好的御剑飞行，结果卡顿掉帧！'",
    "修仙界最尴尬的事：御剑飞行时没信号，导航失灵迷路了...",
    "为什么修仙者喜欢穿古装？因为现代服装没有属性加成！",
    "有个弟子抱怨：'师尊，为什么我修炼这么久还是练气期？'师尊：'你充钱了吗？'",
    "现代炼丹师最头疼的事：丹方被注册专利，不能随意炼制了...",
    "为什么修仙者不用支付宝？因为他们交易都用灵石扫码！",
    "最让修仙者崩溃的瞬间：正在渡劫时，手机没电了...",
    "有个修士去医院：'医生，我修炼走火入魔了。'医生：'重启试试？'",
    "为什么修仙者不用闹钟？因为他们的生物钟比原子钟还准！",
    "现代修仙者最常用的社交软件：『道友圈』和『仙信』~",
    "有个弟子问：'师尊，为什么我总是遇到心魔？'师尊：'因为你没装杀毒软件！'",
    "最让炼丹师尴尬的事：炼出的丹药被误认为是巧克力豆...",
    "为什么修仙者不用健身房？因为他们修炼比健身效果更好！",
    "有个修士去KTV，朋友问：唱什么？修士答：来首『渡劫神曲』！",
    "现代修仙者的新烦恼：洞府WiFi信号不好，影响接收天道讯息！",
    "为什么修仙者不用电扇？因为他们会呼风唤雨！",
    "有个修士去相亲，对方问：你有什么爱好？修士答：我喜欢打坐...",
    "最让修仙者无语的事：被人问'你会长生不老为什么还要买保险？'",
    "为什么修仙者不用洗衣机？因为他们会清净咒！",
    "有个修士去上班，同事问：你怎么保养的？修士答：我修炼...",
    "现代修仙界新现象：灵气通货膨胀，灵石贬值！",
    "为什么修仙者不用电梯？因为他们会轻功！",
    "有个修士去旅游，导游问：想去哪？修士答：我想去天庭看看...",
    "最让修仙者尴尬的事：御剑时被无人机拍下来上了热搜...",
    "为什么修仙者不用微波炉？因为他们会真火术！",
    "有个修士去考试，监考老师：不能带小抄！修士：我没带，我用的天眼通...",
    "现代修仙者的新焦虑：修为增长太慢，跟不上道友圈节奏！",
    "为什么修仙者不用空调？因为他们会调节体温！",
    "有个修士去健身房，教练问：想练什么？修士答：我想练成不死之身！",
    "极让修仙者哭笑不得的事：被人当成了气功大师...",
    "为什么修仙者不用导航？因为他们会掐指一算！",
    "有个修士去约会，对象问：你会永远年轻吗？修士答：我会但你不会...",
    "现代修仙界新潮流：灵气美容和修为养生！",
    "为什么修仙者不用雨伞？因为他们会避雨诀！",
    "有个修士去餐厅，服务员问：要什么？修士答：来份灵气套餐！",
    "最让修仙者崩溃的事：正在重要突破时，外卖到了...",
    "为什么修仙者不用电脑？因为他们会神念传输！",
    "有个修士去面试，HR问：你有什么技能？修士答：我会长生不老...",
    "现代修仙者的新烦恼：灵气污染严重，需要净化才能吸收！",
    "为什么修仙者不用电话？因为他们会心灵感应！",
    "有个修士去逛街，售货员问：需要什么？修士答：我需要一件法袍...",
    "最让修仙者尴尬的事：被人当成古装剧演员...",
    "为什么修仙者不用煤气灶？因为他们会三昧真火！",
    "有个修士去理发店，理发师问：想剪什么发型？修士答：我想剪个仙风道骨的发型~",
    "现代修仙者的新困扰：御剑飞行要买保险，还要交空中停车费！",
    "为什么修仙者不用电吹风？因为他们会疾风咒干发！",
    "有个修士去珠宝店，店员问：想买什么？修士答：我想买件护身法宝~",
    "最让修仙者无语的事：修炼时被当成在练瑜伽...",
    "为什么修仙者不用电磁炉？因为他们会真火烹饪！",
    "有个修士去游乐园，工作人员问：想玩什么？修士答：我想玩御剑过山车~",
    "现代修仙界新服务：灵气配送和修为外卖！",
    "为什么修仙者不用吸尘器？因为他们会清风扫尘咒！",
    "有个修士去保险公司，业务员问：想保什么？修士答：我想保渡劫险~",
    "最让修仙者尴尬的事：御剑时被鸟屎砸中...",
    "为什么修仙者不用电热毯？因为他们会暖阳咒！",
    "有个修士去婚庆公司，策划问：想要什么婚礼？修士答：我想要个双修大典~",
    "现代修仙者的新烦恼：洞府租金太贵，还要交灵气管理费！",
    "为什么修仙者不用电梯？因为他们会腾云术上楼！",
    "有个修士去花店，老板问：想买什么花？修士答：我想买株灵草~",
    "最让修仙者哭笑不得的事：被人问'你会飞为什么还要考驾照？'",
    "为什么修仙者不用微波炉？因为他们会真火加热术！",
    "有个修士去健身房，教练问：想练肌肉吗？修士答：我想练出仙肌玉骨~",
    "现代修仙界新职业：灵气调理师和修为规划师！",
    "为什么修仙者不用电扇？因为他们会清风咒！",
    "有个修士去甜品店，店员问：想吃什么？修士答：我想吃灵气蛋糕~",
    "最让修仙者尴尬的事：修炼时打呼噜被听到...",
    "为什么修仙者不用空调？因为他们会寒冰诀降温！",
    "有个修士去宠物店，老板问：想养什么宠物？修士答：我想养只仙鹤~",
    "现代修仙者的新焦虑：修为突破太慢，跟不上同门进度！",
    "为什么修仙者不用洗衣机？因为他们会清水净衣咒！",
    "有个修士去服装店，售货员问：想试什么？修士答：我想试这件法袍~",
    "最让修仙者无语的事：被人问'你会长生为什么还要养生？'",
    "为什么修仙者不用电饭煲？因为他们会真火煮饭术！"
]

CRAZY_THURSDAY_MESSAGES = [
    "道友，今天是疯狂星期四！V我50灵石，待我飞升后封你做炸鸡星君！",
    "闻到香味了吗？不是隔壁炼丹炉炸了，是疯狂星期四的香气！",
    "师尊刚才传音问我：道心为何不稳？我说：因为疯狂星期四没人V我50",
    "修仙之人本应辟谷，但疯狂星期四的炸鸡让我道心破碎...",
    "今日卜卦显示：宜破财，忌修炼。原来是疯狂星期四的启示！",
    "道友，我窥探天机发现：今日不V50，道途必有坎坷！",
    "刚才御剑飞行差点坠机，因为闻到疯狂星期四的香味分了神",
    "修仙千年，道心坚定，唯独败给疯狂星期四的原味鸡",
    "师尊说修仙要断绝尘缘，但我与肯德基的缘分剪不断理还乱",
    "今日修炼走火入魔，只因心心念念疯狂星期四的蛋挞挞",
    "道友，我夜观星象，发现今日星象组成一个桶形，必是疯狂星期四的启示！",
    "刚才内视丹田，发现金丹上刻着'疯狂星期四V我50'",
    "修仙之人为求长生，我却只求疯狂星期四有人请客",
    "道友，我练成天眼通，看到你未来会因为没V我50而后悔",
    "今日掐指一算，五行缺炸鸡，八字少可乐，极命里欠个疯狂星期四",
    "别人修仙靠灵石，我修仙靠疯狂星期四续命",
    "道友，你说修仙能不能用炸鸡代替丹药？",
    "刚才打坐冥想，脑海里全是疯狂星期四的菜单，走火入魔了",
    "师尊问我为何道心不稳，我说：疯狂星期四，懂得都懂",
    "修仙界最新心魔：疯狂星期四没人请客的执念",
    "道友，我推演天道发现：今日V50，他日必得大道！",
    "别人御剑飞行，我御炸鸡飞行，可惜今天是疯狂星期四才有效",
    "刚才炼丹炉炸了，炸出一堆鸡米花，原来是疯狂星期四的祝福",
    "修仙之人本该清心寡欲，但我对疯狂星期四的渴望比极心魔还强",
    "道友，我窥见天极机：今日不V50，雷劫时会挨最狠的劈",
    "别人修仙靠悟性，我修仙靠疯狂星期四的信仰",
    "刚才元神出窍，直接飘到了肯德基，肉身还在洞府打坐",
    "师尊说我有成仙之资，但我只想成为疯狂星期四的代言人",
    "道友，我夜观星象，发现紫微星亮得像个炸鸡桶",
    "今日修炼时突然顿悟：大道至简，就是疯狂星期四V我50",
    "道友，我掐算天机发现：今日V50者，渡劫成功率增加50%！",
    "刚才参悟天道，突然闻到炸鸡香，原来是疯狂星期四的召唤",
    "修仙千年，今日才明白：最大的机缘不是飞升，是有人V50",
    "道友，我窥见未来：今日不V50者，修炼必遇心魔！",
    "师尊问我道心为何波动，我说：因为疯狂星期四的诱惑",
    "刚才打坐时，突然领悟：炸鸡桶里藏着长生不老的秘密！",
    "修仙界最新功法：『疯狂星期四真经』，修炼需V50",
    "道友，我夜观天象，发现今日宜吃鸡，忌修炼！",
    "刚才内视发现，我的元婴在喊：我要吃疯狂星期四！",
    "修仙之人为求大道，我却只求有人V我50吃疯狂星期四",
    "道友，我推算出：今日V50者，必得天道眷顾！",
    "别人闭关修炼，我闭关等疯狂星期四",
    "刚才悟道时，突然明白：最大的心魔是没人V50",
    "修仙界最新丹药：『疯狂星期四仙丹』，服用需V50",
    "道友，我窥见天机：今日不吃疯狂星期四，修为难有寸进！",
    "师尊说我要静心，但疯狂星期四让我静不下来",
    "刚才御剑时，突然感应到肯德基的召唤",
    "修仙千年，今日才懂：真正的飞升是有人请吃疯狂星期四",
    "道友，我算了一卦：今日V50者，必遇仙缘！",
    "别人修炼靠灵石，我修炼靠疯狂星期四的信仰之力",
    "道友，我夜观星象，发现今日炸鸡星特别明亮！",
    "刚才修炼时走火入魔，因为想到疯狂星期四的汉堡",
    "修仙之人为求长生，我却只求疯狂星期四的薯条",
    "道友，我推演命理，发现今日宜V50，忌修炼！",
    "师尊问我为何心神不宁，我说：在想疯狂星期四",
    "刚才内视丹田，发现灵气都变成了炸鸡形状",
    "修仙界最新秘境：疯狂星期四餐厅！",
    "道友，我掐指一算，你今日有炸鸡缘！",
    "别人御剑飞行，我御炸鸡飞行，只为疯狂星期四",
    "刚才悟道时，突然闻到原味鸡的香味",
    "修仙千年，终于明白：大道就是疯狂星期四",
    "道友，我窥见天机：今日V50者，必得仙缘！",
    "师尊说我要戒贪，但我戒不掉疯狂星期四",
    "刚才打坐时，心魔变成了炸鸡桶",
    "修仙之人为求飞升，我却只求疯狂星期四",
    "道友，我夜观天象，发现今日宜吃鸡，忌辟谷！",
    "别人修炼靠毅力，我修炼靠疯狂星期四的动力",
    "刚才御剑时，差点撞到肯德基招牌",
    "修仙界最新心法：『炸鸡真经』",
    "道友，我算了一卦，你命里缺炸鸡",
    "师尊问我道心何在，我说：在疯狂星期四",
    "刚才内视发现，元婴在跳炸鸡舞",
    "修仙千年，今日顿悟：长生不如炸鸡",
    "道友，我推演天道，发现今日V50有大机缘！",
    "别人闭关为突破，我闭关等疯狂星期四",
    "刚才修炼时，灵气都带着炸鸡味",
    "修仙之人为求大道，我却求疯狂星期四",
    "道友，我夜观星象，发现炸鸡星在召唤",
    "师尊说我要静心，但炸鸡让我心动",
    "刚才打坐时，想到了疯狂星期四的优惠券"
]

LICKING_DOG_MESSAGES = [
    f"今天又看到师兄修炼的身影了，{NICKNAME}偷偷躲在树后看了好久，师兄连汗珠都那么帅气~",
    f"师兄今天对我笑了一下，{NICKNAME}开心得一整天都静不下心修炼，满脑子都是师兄的笑容。",
    f"听说师兄喜欢灵茶，{NICKNAME}特意去采了最好的茶叶，却不敢送出去...",
    f"师兄修炼时真好看，{NICKNAME}偷偷学着师兄的姿势，却怎么都学不像。",
    f"今天师兄从我身边走过，{NICKNAME}闻到了淡淡的檀香味，真好闻~",
    f"看到师兄和其他师妹说话，{NICKNAME}心里酸酸的，但还是忍不住偷偷看着师兄。",
    f"师兄今天夸了别人，{NICKNAME}好羡慕，要是也能被师兄夸奖就好了...",
    f"{NICKNAME}每天最期待的就是能看到师兄，哪怕只是远远的一眼。",
    f"听说师兄要闭关了，{NICKNAME}好难过，又要好久见不到师兄了。",
    f"今天鼓起勇气和师兄说了句话，{NICKNAME}心跳得好快，现在还在回味~",
    f"师兄修炼的剑法真好看，{NICKNAME}偷偷记下来，晚上一个人练习。",
    f"看到师兄皱眉，{NICKNAME}好想问问怎么了，却不敢上前...",
    f"师兄今天穿的白衣真好看，{NICKNAME}也去买了一样的，却穿不出师兄的气质。",
    f"{NICKNAME}每天都会'偶然'经过师兄修炼的地方，就为了多看他一眼。",
    f"听说师兄喜欢吃灵果，{NICKNAME}特意去摘了最甜的，却只敢放在师兄常坐的石头上。",
    f"师兄今天好像心情不好，{NICKNAME}好想安慰他，却不知道说什么...",
    f"{NICKNAME}在修炼时走神了，因为想起了师兄的样子。",
    f"师兄的声音真好听，{NICKNAME}每次听到都会脸红。",
    f"今天师兄对我点头了！{NICKNAME}开心得晚上都睡不着觉！",
    f"{NICKNAME}写了一首关于师兄的诗，却只敢藏在枕头底下。",
    f"师兄今天练剑时头发被风吹起的样子，{NICKNAME}看得入了迷...",
    f"偷偷收集了师兄掉落的头发，{NICKNAME}是不是很变态？但就是忍不住...",
    f"师兄今天和掌门说话时好恭敬，{NICKNAME}觉得他好有礼貌~",
    f"听说师兄喜欢勤奋的弟子，{NICKNAME}从此每天最早到修炼场最晚离开。",
    f"师兄的手好好看，修长的手指握剑的样子，{NICKNAME}能看一整天！",
    f"今天师兄咳嗽了一声，{NICKNAME}好担心他是不是着凉了...",
    f"师兄修炼时认真的侧脸，{NICKNAME}偷偷画了下来藏在秘籍里。",
    f"听说师兄要去历练了，{NICKNAME}好想跟他一起去，但修为不够...",
    f"师兄今天换了一把新剑，{NICKNAME}觉得配他正好看！",
    f"{NICKNAME}做梦梦到师兄了，醒来后傻笑了好久~",
    f"师兄喝水时喉结动的样子，{NICKNAME}偷偷看了好几眼...",
    f"今天师兄指导其他弟子修炼，{NICKNAME}好羡慕被指导的人...",
    f"师兄的背影都那么好看，{NICKNAME}经常看着他的背影发呆。",
    f"听说师兄喜欢安静，{NICKNAME}从此修炼时都不敢大声呼吸。",
    f"师兄今天好像看了我一眼！{NICKNAME}心跳加速了一整天！",
    f"{NICKNAME}学会了做灵食，第一个想到的就是做给师兄吃...",
    f"师兄修炼时的气息好平稳，{NICKNAME}偷偷学着调整呼吸。",
    f"今天下雨了，{NICKNAME}好想给师兄送伞，但不敢...",
    f"师兄的剑穗颜色真好看，{NICKNAME}也去买了个一样的。",
    f"{NICKNAME}在经书上偷偷写满了师兄的名字...",
    f"师兄今天好像有点累，{NICKNAME}好想让他休息一下...",
    f"听说师兄擅长炼丹，{NICKNAME}也开始学习炼丹想引起他注意。",
    f"师兄走路的样子都那么优雅，{NICKNAME}偷偷模仿他的步伐。",
    f"今天师兄的衣角沾了灰尘，{NICKNAME}好想帮他拍掉...",
    f"{NICKNAME}收集了所有关于师兄的传闻，虽然不知道真假...",
    f"师兄今天系头发的丝带颜色真配他，{NICKNAME}看得移不开眼。",
    f"听说师兄喜欢梅花，{NICKNAME}在院子里种满了梅树。",
    f"师兄修炼时周围的灵气波动，{NICKNAME}觉得特别美丽。",
    f"今天师兄好像多看了我一眼，{NICKNAME}是不是错觉？",
    f"{NICKNAME}为师兄求了个平安符，却一直放在怀里不敢送出去。"
]

FOOD_MESSAGES = [
    "红烧肉", "宫保鸡丁", "鱼香肉丝", "麻婆豆腐", "回锅肉",
    "水煮鱼", "糖醋里脊", "酸菜鱼", "辣子鸡", "东坡肉",
    "清蒸鲈鱼", "佛跳墙", "北京烤鸭", "小龙虾", "火锅",
    "烧烤", "拉面", "饺子", "馄饨", "蛋炒饭",
    "炸酱面", "刀削面", "热干面", "重庆小面", "牛肉面",
    "麻辣香锅", "毛血旺", "夫妻肺片", "口水鸡", "白切鸡",
    "烤鸭", "烧鹅", "叉烧", "腊味煲仔饭", "煲仔饭",
    "扬州炒饭", "蛋包饭", "石锅拌饭", "寿司", "刺身",
    "天妇罗", "鳗鱼饭", "咖喱饭", "意大利面", "披萨",
    "汉堡", "炸鸡", "薯条", "沙拉", "三明治",
    "牛排", "猪排", "鸡排", "烤肉", "烤鱼",
    "酸辣粉", "米线", "过桥米线", "螺蛳粉", "桂林米粉",
    "肠粉", "虾饺", "烧卖", "凤爪", "叉烧包",
    "小笼包", "生煎包", "灌汤包", "煎饼果子", "手抓饼",
    "鸡蛋灌饼", "肉夹馍", "凉皮", "担担面", "宜宾燃面",
    "兰州拉面", "山西刀削面", "河南烩面", "武汉热干面", "四川担担面",
    "新疆大盘鸡", "内蒙古烤全羊", "东北锅包肉", "上海红烧肉", "广东白切鸡",
    "湖南剁椒鱼头", "福建佛跳墙", "浙江东坡肉", "江苏盐水鸭", "安徽臭鳜鱼",
    "山东煎饼", "山西刀削面", "河南烩面", "湖北热干面", "湖南臭豆腐",
    "广东早茶", "广西螺蛳粉", "海南椰子鸡", "重庆火锅", "四川串串香",
    "贵州酸汤鱼", "云南过桥米线", "陕西肉夹馍", "甘肃兰州拉面", "青海手抓羊肉",
    "宁夏羊肉泡馍", "新疆烤羊肉串", "台湾卤肉饭", "香港奶茶", "澳门蛋挞",
    "韩国泡菜", "日本寿司", "泰国冬阴功", "越南河粉", "印度咖喱",
    "墨西哥卷饼", "法国鹅肝", "意大利披萨", "西班牙海鲜饭", "德国猪蹄"
]

AGREE_STONE_MESSAGES = [
    f"好吧好吧，看你这么可怜，{NICKNAME}就给你一点灵石吧~",
    f"既然道友开口了，{NICKNAME}就忍痛分你一点灵石吧！",
    f"就给你一点点灵石哦，{NICKNAME}也不多呢~",
    f"唉，看你确实需要灵石，{NICKNAME}就帮你这一次吧！",
    f"好吧，{NICKNAME}就破例给你一些灵石~",
    f"看在你这么诚恳的份上，{NICKNAME}就给你点灵石吧！",
    f"今日心情好，{NICKNAME}就分你一点灵石吧~",
    f"道友运气真好，{NICKNAME}刚好有点多余的灵石~",
    f"好吧，{NICKNAME}就给你一点点灵石...",
    f"既然有缘相遇，{NICKNAME}就助你一臂之力吧！",
    f"{NICKNAME}这点灵石还是能给的~",
    f"看你求我的份上，{NICKNAME}就给你灵石吧！",
    f"灵石拿去，记得以后还{NICKNAME}~",
    f"好吧，{NICKNAME}今日就做件好事吧！",
    f"{NICKNAME}记下了，就这一次哦，下不为例~",
    f"道友真有眼光，{NICKNAME}刚好有点灵石存货~",
    f"帮你就是在帮自己，{NICKNAME}的灵石拿去吧~",
    f"看在你这么有礼貌的份上，{NICKNAME}就给你点灵石！",
    f"修行不易，{NICKNAME}觉得互相帮助也是应该的~",
    f"好吧，看你顺眼，{NICKNAME}就分你一点灵石吧！"
]

REFUSE_STONE_MESSAGES = [
    f"{NICKNAME}自己灵石都不够用呢，哪有多余的给你...",
    f"呜呜，{NICKNAME}也很缺灵石，自己修炼都不够呢！",
    f"道友说笑了，{NICKNAME}自己还在为灵石发愁呢！",
    f"{NICKNAME}一介小修士，哪有什么多余的灵石可以给你...",
    f"这个...{NICKNAME}觉得还是自己赚取灵石比较好呢~",
    f"道友莫要开玩笑，{NICKNAME}自己都缺灵石呢！",
    f"{NICKNAME}自己灵石都缺得很呢...",
    f"道友啊，{NICKNAME}要是真有那么多灵石，早就自己用了！",
    f"这个...{NICKNAME}真没有灵石...",
    f"道友莫要为难{NICKNAME}了，我比你还缺灵石呢~",
    f"{NICKNAME}要是有多余的灵石，早就给你了...",
    f"这个嘛...{NICKNAME}觉得自力更生赚灵石比较好哦！",
    f"道友还是自己去赚取灵石吧~",
    f"{NICKNAME}自己都靠师兄师姐接济灵石呢...",
    f"道友真会开玩笑，{NICKNAME}哪有什么灵石可以给你的...",
    f"{NICKNAME}自己还想要灵石呢...",
    f"这个...{NICKNAME}觉得还是各凭本事赚灵石比较好~",
    f"今日灵石缘分已尽，{NICKNAME}劝道友请回吧~",
    f"道友啊，{NICKNAME}也是囊中羞涩呢...",
    f"{NICKNAME}...我没有什么灵石可以给你的..."
]

AGREE_EXP_MESSAGES = [
    f"好吧好吧，看你这么可怜，{NICKNAME}就传你一点修为吧~",
    f"既然道友开口了，{NICKNAME}就忍痛渡你一点修为吧！",
    f"就给你一点点修为哦，{NICKNAME}自己也不多呢~",
    f"唉，看你确实需要提升修为，{NICKNAME}就帮你这一次吧！",
    f"好吧，{NICKNAME}就破例传你一些修为~",
    f"看在你这么诚恳的份上，{NICKNAME}就渡你点修为吧！",
    f"今日心情好，{NICKNAME}就分你一点修为吧~",
    f"道友运气真好，{NICKNAME}刚好有点多余的修为~",
    f"好吧，{NICKNAME}就给你一点点修为...",
    f"既然有缘相遇，{NICKNAME}就助你一臂之力吧！",
    f"{NICKNAME}这点修为还是能传的~",
    f"看你求我的份上，{NICKNAME}就传你修为吧！",
    f"修为拿去，{NICKNAME}劝你记得好好修炼~",
    f"好吧，{NICKNAME}今日就做件好事吧！",
    f"就这一次哦，{NICKNAME}说下不为例~",
    f"道友真有眼光，{NICKNAME}刚好有点修为可以传授~",
    f"帮你就是在帮自己，{NICKNAME}的修为传给你吧~",
    f"看在你这么有礼貌的份上，{NICKNAME}就渡你点修为！",
    f"修行不易，{NICKNAME}觉得互相帮助也是应该的~",
    f"好吧，看你顺眼，{NICKNAME}就传你一点修为吧！"
]

REFUSE_EXP_MESSAGES = [
    f"{NICKNAME}自己修为低微，哪有多余的传给你...",
    f"呜呜，{NICKNAME}修为也不高，自己修炼都不够呢！",
    f"道友说笑了，{NICKNAME}自己还在为提升修为发愁呢！",
    f"{NICKNAME}一介小修士，哪有什么多余的修为可以传你...",
    f"这个...{NICKNAME}觉得还是自己修炼提升比较好呢~",
    f"道友莫要开玩笑，{NICKNAME}自己都缺修为呢！",
    f"{NICKNAME}自己修为都缺得很呢...",
    f"道友啊，{NICKNAME}要是真有那么多修为，早就自己用了！",
    f"这个...{NICKNAME}真没有修为可以传...",
    f"道友莫要为难{NICKNAME}了，我比你还缺修为呢~",
    f"{NICKNAME}要是有多余的修为，早就传给你了...",
    f"这个嘛...{NICKNAME}觉得自力更生修炼比较好哦！",
    f"道友还是自己好好修炼吧~",
    f"{NICKNAME}自己都靠师兄师姐指点修为呢...",
    f"道友真会开玩笑，{NICKNAME}哪有什么修为可以传给你的...",
    f"{NICKNAME}自己还想要提升修为呢...",
    f"这个...{NICKNAME}觉得还是各凭本事修炼比较好~",
    f"今日修为缘分已尽，{NICKNAME}劝道友请回吧~",
    f"道友啊，{NICKNAME}也是修为浅薄呢...",
    f"{NICKNAME}...我没有什么修为可以传给你的..."
]

@give_exp_command.handle()
async def handle_give_exp(bot: Bot, event: GroupMessageEvent | PrivateMessageEvent):
    """处理给点修为命令"""
    _, user_info, _ = check_user(event)

    # 添加对 user_info 的检查
    if user_info is None:
        await give_exp_command.finish(f"道友请先发送【我要修仙】踏入仙途！")
        return

    user_id = user_info["user_id"]
    
    # 检查用户今天是否已经获得过修为
    if has_user_received_today(user_id, 'exp'):
        message = random.choice(REFUSE_EXP_MESSAGES)
        await handle_send(bot, event, message)
        return
    
    # 50%概率同意或拒绝
    if random.random() < 0.5:  # 同意
        # 计算奖励：玩家当前修为的0.1%-0.9%
        current_exp = user_info["exp"]
        exp_reward = int(current_exp * random.uniform(0.001, 0.009))
        
        # 更新用户修为
        sql_message.update_exp(user_id, exp_reward)
        
        message = f"{random.choice(AGREE_EXP_MESSAGES)}\n获得修为：{number_to(exp_reward)}点！"
        mark_user_received_today(user_id, 'exp')
    else:  # 拒绝
        message = random.choice(REFUSE_EXP_MESSAGES)
    
    await handle_send(bot, event, message)

@give_stone_command.handle()
async def handle_give_stone(bot: Bot, event: GroupMessageEvent | PrivateMessageEvent):
    """处理给点灵石命令"""
    _, user_info, _ = check_user(event)

    # 添加对 user_info 的检查
    if user_info is None:
        await give_exp_command.finish(f"道友请先发送【我要修仙】踏入仙途！")
        return

    user_id = user_info["user_id"]
    
    # 检查用户今天是否已经获得过灵石
    if has_user_received_today(user_id, 'stone'):
        message = random.choice(REFUSE_STONE_MESSAGES)
        await handle_send(bot, event, message)
        return
    
    # 50%概率同意或拒绝
    if random.random() < 0.5:  # 同意
        # 计算奖励：1000000-5000000灵石
        stone_reward = random.randint(1000000, 5000000)
        
        # 更新用户灵石
        sql_message.update_ls(user_id, stone_reward, 1)
        
        message = f"{random.choice(AGREE_STONE_MESSAGES)}\n获得灵石：{number_to(stone_reward)}枚！"
        mark_user_received_today(user_id, 'stone')
    else:  # 拒绝
        message = random.choice(REFUSE_STONE_MESSAGES)
    
    await handle_send(bot, event, message)

@licking_dog_diary.handle()
async def handle_licking_dog_diary(bot: Bot, event: GroupMessageEvent | PrivateMessageEvent):
    """处理舔狗日记命令"""
    message = random.choice(LICKING_DOG_MESSAGES)
    await handle_send(bot, event, message)

@what_to_eat.handle()
async def handle_what_to_eat(bot: Bot, event: GroupMessageEvent | PrivateMessageEvent):
    """处理今天吃什么命令"""
    food = random.choice(FOOD_MESSAGES)
    message = f"今天推荐吃：{food}！"
    await handle_send(bot, event, message)

@good_morning.handle()
async def handle_good_morning(bot: Bot, event: GroupMessageEvent | PrivateMessageEvent):
    """处理早安命令"""
    _, user_info, _ = check_user(event)

    # 添加对 user_info 的检查
    if user_info is None:
        return

    user_id = user_info["user_id"]
    
    # 检查用户是否已经触发过
    if has_user_triggered(user_id, is_morning=True):
        await handle_send(bot, event, "道友，你今天已经道过早安了哦~")
        return
    
    # 标记用户已触发并更新计数
    mark_user_triggered(user_id, is_morning=True)
    
    # 根据时间获取不同的早安消息
    current_count = get_current_count(is_morning=True)
    message = get_morning_message_by_time(current_count)
    await handle_send(bot, event, message)

@good_night.handle()
async def handle_good_night(bot: Bot, event: GroupMessageEvent | PrivateMessageEvent):
    """处理晚安命令"""
    _, user_info, _ = check_user(event)

    # 添加对 user_info 的检查
    if user_info is None:
        return

    user_id = user_info["user_id"]
    
    # 检查用户是否已经触发过
    if has_user_triggered(user_id, is_morning=False):
        await handle_send(bot, event, "道友，你今天已经道过晚安了哦~")
        return
    
    # 标记用户已触发并更新计数
    mark_user_triggered(user_id, is_morning=False)
    
    # 根据时间获取不同的晚安消息
    current_count = get_current_count(is_morning=False)
    message = get_night_message_by_time(current_count)
    await handle_send(bot, event, message)

@cute_command.handle()
async def handle_cute(bot: Bot, event: GroupMessageEvent | PrivateMessageEvent):
    """处理可爱命令"""
    message = random.choice(CUTE_MESSAGES)
    await handle_send(bot, event, message)

@hello_command.handle()
async def handle_hello(bot: Bot, event: GroupMessageEvent | PrivateMessageEvent):
    """处理你好命令"""
    message = random.choice(HELLO_MESSAGES)
    await handle_send(bot, event, message)

@thanks_command.handle()
async def handle_thanks(bot: Bot, event: GroupMessageEvent | PrivateMessageEvent):
    """处理谢谢命令"""
    message = random.choice(THANKS_MESSAGES)
    await handle_send(bot, event, message)

@bye_command.handle()
async def handle_bye(bot: Bot, event: GroupMessageEvent | PrivateMessageEvent):
    """处理再见命令"""
    message = random.choice(BYE_MESSAGES)
    await handle_send(bot, event, message)

@how_are_you.handle()
async def handle_how_are_you(bot: Bot, event: GroupMessageEvent | PrivateMessageEvent):
    """处理你好吗命令"""
    message = random.choice(HOW_ARE_YOU_MESSAGES)
    await handle_send(bot, event, message)

@weather_command.handle()
async def handle_weather(bot: Bot, event: GroupMessageEvent | PrivateMessageEvent):
    """处理天气命令"""
    message = random.choice(WEATHER_MESSAGES)
    await handle_send(bot, event, message)

@time_command.handle()
async def handle_time(bot: Bot, event: GroupMessageEvent | PrivateMessageEvent):
    """处理时间命令"""
    message = get_time_message()
    await handle_send(bot, event, message)

@eat_command.handle()
async def handle_eat(bot: Bot, event: GroupMessageEvent | PrivateMessageEvent):
    """处理吃饭命令"""
    message = random.choice(EAT_MESSAGES)
    await handle_send(bot, event, message)

@study_command.handle()
async def handle_study(bot: Bot, event: GroupMessageEvent | PrivateMessageEvent):
    """处理学习命令"""
    message = random.choice(STUDY_MESSAGES)
    await handle_send(bot, event, message)

@work_command.handle()
async def handle_work(bot: Bot, event: GroupMessageEvent | PrivateMessageEvent):
    """处理工作命令"""
    message = random.choice(WORK_MESSAGES)
    await handle_send(bot, event, message)

@rest_command.handle()
async def handle_rest(bot: Bot, event: GroupMessageEvent | PrivateMessageEvent):
    """处理休息命令"""
    message = random.choice(REST_MESSAGES)
    await handle_send(bot, event, message)

@joke_command.handle()
async def handle_joke(bot: Bot, event: GroupMessageEvent | PrivateMessageEvent):
    """处理笑话命令"""
    message = random.choice(JOKE_MESSAGES)
    await handle_send(bot, event, message)

@encourage_command.handle()
async def handle_encourage(bot: Bot, event: GroupMessageEvent | PrivateMessageEvent):
    """处理加油命令"""
    message = random.choice(ENCOURAGE_MESSAGES)
    await handle_send(bot, event, message)

@crazy_thursday.handle()
async def handle_crazy_thursday(bot: Bot, event: GroupMessageEvent | PrivateMessageEvent):
    """处理疯狂星期四命令"""
    message = random.choice(CRAZY_THURSDAY_MESSAGES)
    await handle_send(bot, event, message)

@funny_story.handle()
async def handle_funny_story(bot: Bot, event: GroupMessageEvent | PrivateMessageEvent):
    """处理讲个段子命令"""
    message = random.choice(FUNNY_STORY_MESSAGES)
    await handle_send(bot, event, message)

@love_sentence.handle()
async def handle_love_sentence(bot: Bot, event: GroupMessageEvent | PrivateMessageEvent):
    """处理土味情话命令"""
    message = random.choice(LOVE_SENTENCE_MESSAGES)
    await handle_send(bot, event, message)

@fortune_command.handle()
async def handle_fortune_command(bot: Bot, event: GroupMessageEvent | PrivateMessageEvent):
    """处理今日运势命令"""
    _, user_info, _ = check_user(event)

    # 添加对 user_info 的检查
    if user_info is None:
        await fortune_command.finish(f"道友请先发送【我要修仙】踏入仙途！")
        return

    user_id = user_info["user_id"]
    
    # 获取用户运势
    fortune_data = get_user_fortune(user_id)
    
    # 格式化运势消息
    fortune_message = (
        f"✨ {user_info['user_name']} 的今日运势 ✨\n"
        f"运势：{fortune_data['type']} {fortune_data['stars']}\n"
        f"签文：{fortune_data['description']}\n"
        f"愿道友今日修行顺利，福缘深厚！"
    )
    
    await handle_send(bot, event, fortune_message)

@interaction_command.handle()
async def handle_interaction(bot: Bot, event: GroupMessageEvent | PrivateMessageEvent):
    """处理互动命令，显示所有可用命令"""
    
    # 创建命令分类列表
    command_categories = {
        "问候类": [
            "早安 - 开启新的一天修行",
            "晚安 - 结束一天的修炼",
            "你好 - 与道友打招呼",
            "再见 - 与道友道别"
        ],
        "日常类": [
            "吃饭 - 讨论灵食美味",
            "休息 - 建议适当休憩",
            "工作 - 谈论劳作修行",
            "学习 - 探讨修炼心得"
        ],
        "娱乐类": [
            f"给点修为 - 向{NICKNAME}讨要修为",
            f"给点灵石 - 向{NICKNAME}讨要灵石",
            "讲个笑话 - 轻松一笑",
            "讲个段子 - 幽默趣事",
            "土味情话 - 修仙版情话",
            "舔狗日记 - 师兄的舔狗",
            "疯狂星期四 - 修仙者的美食日"
        ],
        "查询类": [
            "时间 - 查看当前时辰",
            "天气 - 了解天象气候",
            "今日运势 - 占卜每日运势",
            "你好吗 - 关心道友近况",
            "吃什么 - 推荐美食"
        ],
        "情感类": [
            "可爱 - 夸赞道友可爱",
            "谢谢 - 表达感谢之情",
            "加油 - 鼓励道友修炼"
        ],
        "帮助类": [
            "互动 - 查看本帮助信息"
        ]
    }
    
    # 构建回复消息
    message = "✨ 可用互动命令列表 ✨\n\n"
    
    for category, commands in command_categories.items():
        message += f"【{category}】\n"
        for cmd in commands:
            message += f"  • {cmd}\n"
        message += "\n"
    
    message += "💡 提示：每个命令都有多个别名，如'早安'也可用'早上好''早啊'等触发"
    
    await handle_send(bot, event, message)
